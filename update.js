const { completePayTable } = require('./facility_info.js');
const { db, Pay } = require('./connect.js');
const facilityList = [
  'A11',
  'A80',
  'A90',
  'ABE',
  'ABI',
  'ABQ',
  'ACK',
  'ACT',
  'ACY',
  'ADS',
  'ADW',
  'AFW',
  'AGC',
  'AGS',
  'ALB',
  'ALO',
  'AMA',
  'ANC',
  'APA',
  'APC',
  'ARB',
  'ARR',
  'ASE',
  'ATL',
  'AUS',
  'AVL',
  'AVP',
  'AZO',
  'BDL',
  'BED',
  'BFI',
  'BFL',
  'BGM',
  'BGR',
  'BHM',
  'BIL',
  'BIS',
  'BJC',
  'BNA',
  'BOI',
  'BOS',
  'BPT',
  'BTR',
  'BTV',
  'BUF',
  'BUR',
  'BWI',
  'C90',
  'CAE',
  'CAK',
  'CCR',
  'CDW',
  'CHA',
  'CHS',
  'CID',
  'CKB',
  'CLE',
  'CLT',
  'CMA',
  'CMH',
  'CMI',
  'CNO',
  'COS',
  'CPR',
  'CPS',
  'CRP',
  'CRQ',
  'CRW',
  'CSG',
  'CVG',
  'D01',
  'D10',
  'D21',
  'DAB',
  'DAL',
  'DAY',
  'DCA',
  'DEN',
  'DFW',
  'DLH',
  'DPA',
  'DSM',
  'DTW',
  'DVT',
  'DWH',
  'ELM',
  'ELP',
  'EMT',
  'ERI',
  'EUG',
  'EVV',
  'EWR',
  'F11',
  'FAI',
  'FAR',
  'FAT',
  'FAY',
  'FCM',
  'FFZ',
  'FLL',
  'FLO',
  'FNT',
  'FPR',
  'FRG',
  'FSD',
  'FSM',
  'FTW',
  'FWA',
  'FXE',
  'GCN',
  'GEG',
  'GFK',
  'GGG',
  'GPT',
  'GRB',
  'GRR',
  'GSO',
  'GSP',
  'GTF',
  'HCF',
  'HEF',
  'HIO',
  'HLN',
  'HOU',
  'HPN',
  'HSV',
  'HTS',
  'HUF',
  'HWD',
  'I90',
  'IAD',
  'IAH',
  'ICT',
  'ILG',
  'ILM',
  'IND',
  'ISP',
  'ITO',
  'JAN',
  'JAX',
  'JCF',
  'JFK',
  'JNU',
  'L30',
  'LAF',
  'LAN',
  'LAS',
  'LAX',
  'LBB',
  'LCH',
  'LEX',
  'LFT',
  'LGA',
  'LGB',
  'LIT',
  'LNK',
  'LOU',
  'LVK',
  'M03',
  'M98',
  'MAF',
  'MBS',
  'MCI',
  'MCO',
  'MDT',
  'MDW',
  'MEM',
  'MFD',
  'MGM',
  'MHT',
  'MIA',
  'MIC',
  'MKC',
  'MKE',
  'MKG',
  'MLI',
  'MLU',
  'MMU',
  'MOB',
  'MRI',
  'MRY',
  'MSN',
  'MSP',
  'MSY',
  'MWH',
  'MYF',
  'MYR',
  'N90',
  'NCT',
  'NEW',
  'OAK',
  'OGG',
  'OKC',
  'OMA',
  'ONT',
  'ORD',
  'ORF',
  'ORL',
  'P31',
  'P50',
  'P80',
  'PAE',
  'PAO',
  'PBI',
  'PCT',
  'PDK',
  'PDX',
  'PHF',
  'PHL',
  'PHX',
  'PIA',
  'PIE',
  'PIT',
  'PNE',
  'PNS',
  'POC',
  'POU',
  'PRC',
  'PSC',
  'PSP',
  'PTK',
  'PUB',
  'PVD',
  'PWK',
  'PWM',
  'R90',
  'RDG',
  'RDU',
  'RFD',
  'RHV',
  'RIC',
  'RNO',
  'ROA',
  'ROC',
  'ROW',
  'RST',
  'RSW',
  'RVS',
  'S46',
  'S56',
  'SAN',
  'SAT',
  'SAV',
  'SBA',
  'SBN',
  'SCK',
  'SCT',
  'SDF',
  'SDL',
  'SEA',
  'SEE',
  'SFB',
  'SFO',
  'SGF',
  'SHV',
  'SJC',
  'SJU',
  'SLC',
  'SMF',
  'SMO',
  'SNA',
  'SPI',
  'SRQ',
  'STL',
  'STP',
  'STS',
  'STT',
  'SUS',
  'SUX',
  'SYR',
  'T75',
  'TEB',
  'TLH',
  'TMB',
  'TOA',
  'TOL',
  'TPA',
  'TRI',
  'TUL',
  'TUS',
  'TVC',
  'TWF',
  'TYS',
  'U90',
  'VGT',
  'VNY',
  'VRB',
  'Y90',
  'YIP',
  'YNG',
  'ZAB',
  'ZAN',
  'ZAU',
  'ZBW',
  'ZDC',
  'ZDV',
  'ZFW',
  'ZHU',
  'ZID',
  'ZJX',
  'ZKC',
  'ZLA',
  'ZLC',
  'ZMA',
  'ZME',
  'ZMP',
  'ZNY',
  'ZOA',
  'ZOB',
  'ZSE',
  'ZSU',
  'ZTL',
  'ZUA',
];

function insertToDb(list) {
  const docs = [];

  for (let i = 0, len = list.length; i < len; i++) {
    let fac = list[i];
    let facData = completePayTable(fac);
    const [COLACPCMAX, COLACPC, COLAD3, COLAD2, COLAD1, COLAAG] = facData.COLA;
    const [CPCMAX, CPC, D3, D2, D1, AG] = facData.PayTable;
    const differentialType = facData.differentialType || null;

    let [DIFCPCMAX, DIFCPC, DIFD3, DIFD2, DIFD1, DIFAG] = [null, null, null, null, null, null];

    if (facData.differentialType) {
      [DIFCPCMAX, DIFCPC, DIFD3, DIFD2, DIFD1, DIFAG] = facData.differentialAmount;
    }
    const differentialPercentage = facData.differentialPercentage;

    const doc = {
      fac_id: fac,
      CPCMAX: CPCMAX,
      CPC: CPC,
      D3: D3,
      D2: D2,
      D1: D1,
      AG: AG,
      'CIP%': facData['CIP%'],
      CIPCPCMAX: facData.CIP[0],
      CIPCPC: facData.CIP[1],
      CIPD3: facData.CIP[2],
      CIPD2: facData.CIP[3],
      CIPD1: facData.CIP[4],
      CIPAG: facData.CIP[5],
      'COLA%': facData['COLA%'],
      COLACPCMAX: COLACPCMAX,
      COLACPC: COLACPC,
      COLAD3: COLAD3,
      COLAD2: COLAD2,
      COLAD1: COLAD1,
      COLAAG: COLAAG,
      differentialType: differentialType,
      DIFCPCMAX: DIFCPCMAX,
      DIFCPC: DIFCPC,
      DIFD3: DIFD3,
      DIFD2: DIFD2,
      DIFD1: DIFD1,
      DIFAG: DIFAG,
      differentialPercentage: differentialPercentage,
    };
    docs.push(doc);
  }

  Pay.bulkWrite(
    docs.map((doc) => ({
      updateOne: {
        filter: { fac_id: doc.fac_id },
        update: { $set: doc },
        upsert: true,
      },
    }))
  );
  console.log('** Job Complete **');
}

insertToDb(facilityList);
